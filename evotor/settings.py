# -*- coding: utf-8 -*-
"""
Django settings for evotor project.

Generated by 'django-admin startproject' using Django 1.11.22.

For more information on this file, see
https://docs.djangoproject.com/en/1.11/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.11/ref/settings/
"""

import os
from evotor.api_settings import *
from evotor.private_setting import *

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

PROJECT_FILES_DIR = 'files/evotor/'

FILES_DIR = os.path.dirname(os.path.join(os.path.expanduser('~'), PROJECT_FILES_DIR))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.11/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = b'dh-=q^q_14f28ams(_(7=yb)yvcaf9letw*@u8_2gc)np1a=ak'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = False

ALLOWED_HOSTS = [
    u'evotorservice.ru',
    u'.evotorservice.ru',
    ]

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    'corsheaders',

    'api.apps.ApiConfig',
    'applications.apps.ApplicationsConfig',
    'users.apps.UsersConfig',
    'stores.apps.StoresConfig',
    'products.apps.ProductsConfig',
]

"""
Порядок промежуточных слоёв

Несколько советов о порядке промежуточных слоёв Django:

    1 SecurityMiddleware

    Должен следовать в начале списка промежуточных слоев, если вы используете SSL перенаправление, чтобы избежать обработки небезопасного запроса другими промежуточными слоями.

    2 UpdateCacheMiddleware

    Добавлять перед промежуточными слоями, которые могут изменить заголовок Vary (SessionMiddleware, GZipMiddleware, LocaleMiddleware).

    3 GZipMiddleware

    Добавлять перед промежуточными слоями, которые могут изменять или читать тело ответа.

    После UpdateCacheMiddleware: изменяет заголовок Vary.

    4 ConditionalGetMiddleware

    Перед CommonMiddleware: использует установленный заголовок Etag при USE_ETAGS = True.

    5 SessionMiddleware

    После UpdateCacheMiddleware: изменяет заголовок Vary.

    6 LocaleMiddleware

    Следует одним из первых, после SessionMiddleware (использует сессию) и CacheMiddleware (изменяет заголовок Vary).

    7 CommonMiddleware

    Перед любым промежуточным слоем, который может изменять ответ (вычисляет ETags).

    После GZipMiddleware, чтобы заголовок ETag не вычислялся для сжатого ответа.

    Ближе к верху: выполняет перенаправление при APPEND_SLASH или PREPEND_WWW равном True.

    8 CsrfViewMiddleware

    Перед любым промежуточным слоем, который предполагает, что CSRF защита уже выполнена.

    9 AuthenticationMiddleware

    После SessionMiddleware: использует сессию.

    10 MessageMiddleware

    После SessionMiddleware: может использовать сессию для хранения данных.

    11 FetchFromCacheMiddleware

    После любого промежуточного слоя, который может изменить заголовок Vary: его значение используется для генерации ключа в кеше.

    12 FlatpageFallbackMiddleware

    Должен быть в низу.

    13 RedirectFallbackMiddleware

    Должен быть в низу.

"""

MIDDLEWARE = [
    'evotor.middleware.LogsMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.locale.LocaleMiddleware',
    'corsheaders.middleware.CorsMiddleware',  # corsheaders
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'evotor.middleware.TokenMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',

]

GRAPHENE = {
    'SCHEMA': 'app.schema.schema' # Where your Graphene schema lives
}

AUTHENTICATION_BACKENDS = ('django.contrib.auth.backends.ModelBackend',)

EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'

SITE_ID = 1

AUTH_USER_MODEL = 'users.User'

ROOT_URLCONF = 'evotor.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

STATICFILES_FINDERS = (
    'django.contrib.staticfiles.finders.FileSystemFinder',
    'django.contrib.staticfiles.finders.AppDirectoriesFinder',
)

WSGI_APPLICATION = 'evotor.wsgi.application'


# Database
# https://docs.djangoproject.com/en/1.11/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}

CSRF_TRUSTED_ORIGINS = [
    u'evotorservice.ru',
    u'.evotorservice.ru',
    u'127.0.0.1:8000',
]

# CORS Setup
CORS_ORIGIN_WHITELIST = [
    "https://evotorservice.ru",
    "http://localhost:8000"
]


# Password validation
# https://docs.djangoproject.com/en/1.11/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

CKEDITOR_UPLOAD_PATH = "uploads/"
CKEDITOR_IMAGE_BACKEND = "pillow"
CKEDITOR_JQUERY_URL = '//ajax.googleapis.com/ajax/libs/jquery/2.1.1/jquery.min.js'

# CKEDITOR_CONFIGS по сути необязательны. Они влияют на тулбар редактора. Если выключите - будет очень мало
# инструментов для работы с текстом. После полной настройки - попробуйте с ними поиграться. Возможно найдете для себя
# какой-то более оптимальный вариант настроек!
CKEDITOR_CONFIGS = {
    "default": {
        "removePlugins": "stylesheetparser",
        'allowedContent': True,
        'toolbar_Full': [
            ['Styles', 'Format', 'Bold', 'Italic', 'Underline', 'Strike', 'Subscript', 'Superscript', '-',
             'RemoveFormat'],
            ['Image', 'Flash', 'Table', 'HorizontalRule'],
            ['TextColor', 'BGColor'],
            ['Smiley', 'sourcearea', 'SpecialChar'],
            ['Link', 'Unlink', 'Anchor'],
            ['NumberedList', 'BulletedList', '-', 'Outdent', 'Indent', '-', 'Blockquote', 'CreateDiv', '-',
             'JustifyLeft', 'JustifyCenter', 'JustifyRight', 'JustifyBlock', '-', 'BidiLtr', 'BidiRtl', 'Language'],
            ['Source', '-', 'Save', 'NewPage', 'Preview', 'Print', '-', 'Templates'],
            ['Cut', 'Copy', 'Paste', 'PasteText', 'PasteFromWord', '-', 'Undo', 'Redo'],
            ['Find', 'Replace', '-', 'SelectAll', '-', 'Scayt'],
            ['Maximize', 'ShowBlocks']
        ],
    }
}

# Internationalization
# https://docs.djangoproject.com/en/1.11/topics/i18n/

LANGUAGE_CODE = 'ru-Ru'

TIME_ZONE = 'Europe/Moscow'

USE_I18N = True

USE_L10N = True

USE_TZ = True

CODING = "utf-8"


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.11/howto/static-files/
# указывает на изначально пустую папку, в которую будет собрана вся статика: как project-wide,
# так и app-specific. Эту папку, в общем случае, должен обслуживать frontend web-сервер (например, nginx)

STATIC_ROOT = os.path.join(FILES_DIR, 'static')
STATIC_URL = '/static/'

MEDIA_ROOT = os.path.join(FILES_DIR, 'media')
MEDIA_URL = '/media/'

STATICFILES_DIRS = (
    os.path.join(BASE_DIR, "static"),
)

try:
    LOCAL_INSTALLED_APPS = LOCAL_MIDDLEWARE = []
    from evotor.local_settings import *

    INSTALLED_APPS += LOCAL_INSTALLED_APPS
    MIDDLEWARE = LOCAL_MIDDLEWARE + MIDDLEWARE
except ImportError:
    pass
